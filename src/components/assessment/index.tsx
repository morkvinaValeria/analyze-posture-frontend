/* eslint-disable react-hooks/exhaustive-deps */
import React, { useContext, useEffect, useState } from 'react';
import shrimpImage from '../../assets/img/shrimp.png';
import { DetectedPoints } from '../../common/types';
import { StepContext, UploadFileWithBase64 } from '../../contexts/step';
import ImageWithLines from './image-with-lines';

import styles from './styles.module.scss';

const Assessment: React.FC = () => {
  const DISABLED_COLOR = 'grey';

  const stepContext = useContext(StepContext);

  const [points] = useState<Record<string, DetectedPoints>>({
    ...stepContext?.pointList,
  });
  const [isLoading, setIsLoading] = useState<boolean>(true);
  const [angles, setAngles] = useState<Record<string, number>>({});
  const [currentFile, setCurrentFile] = useState<
    UploadFileWithBase64 & { index: number }
  >({
    ...(stepContext?.fileList[0] as UploadFileWithBase64),
    index: 0,
  });

  const isPrevDisabled = () => currentFile?.index === 0;
  const isNextDisabled = () =>
    currentFile?.index >= (stepContext?.fileList || []).length - 1;

  const changeFile = (n: number) => {
    if (stepContext?.fileList && currentFile) {
      const newFile = stepContext?.fileList[currentFile.index + n];
      setCurrentFile({ ...newFile, index: currentFile.index + n });
    }
  };
  const revertAnglesToShow = (angles: Record<string, number>) => {
    const newAngles = { shoulders: -100 };
    Object.keys(angles).forEach(
      (key) =>
        (newAngles[key as keyof typeof newAngles] =
          angles[key] > 90 ? 180 - angles[key] : angles[key])
    );
    setAngles(newAngles);
  };

  useEffect(() => {
    if (Object.keys(points).length !== 0) {
      setIsLoading(false);
    }
  }, [points, currentFile]);

  useEffect(() => {
    if (!points[currentFile.uid]) {
      setIsLoading(true);
    }
  }, [currentFile]);

  return (
    <>
      <h5>Assessment Results</h5>
      <p className={styles.thankYou}>
        Thank you for completing your posture assessment! Below, you will find
        the results generated by our advanced neural network analysis, which
        evaluates key angles and classifies your posture. Based on these
        findings, we’ve also provided tailored recommendations for exercises to
        help improve your alignment and overall well-being.
      </p>
      {isLoading === false && currentFile && points[currentFile.uid] ? (
        <div className={styles.imgSlider}>
          <button
            className={styles.prev}
            onClick={() => changeFile(-1)}
            disabled={isPrevDisabled()}
            style={isPrevDisabled() ? { color: DISABLED_COLOR } : {}}
          >
            &#10094;
          </button>
          <ImageWithLines
            file={currentFile}
            points={points[currentFile.uid]}
            key={currentFile?.index || -1}
            saveAngles={revertAnglesToShow}
          />
          <div className={styles.description}>
            <b>Calculated Angles</b>
            <p>
              Precise angles measured between key anatomical points to identify
              alignment deviations or asymmetries. These metrics provide a
              detailed understanding of your posture and areas for improvement.
            </p>
            {points[currentFile.uid].sideView ? (
              <div>
                <p>
                  📏 Ear-shoulder angle = {angles['ear-shoulder']}&deg;
                  <br />
                  📏 Shoulder-hip angle = {angles['shoulder-hip']}&deg;
                  <br />
                  📏 Hip-knee angle = {angles['hip-knee']}&deg;
                  <br />
                  📏 Knee-ankle angle = {angles['knee-ankle']}&deg;
                </p>
              </div>
            ) : (
              <div>
                <p>
                  📏 Shoulders angle = {angles['shoulders']}&deg;
                  <br />
                  📏 Hips angle = {angles['hips']}&deg;
                  <br />
                  📏 Knees angle = {angles['knees']}&deg;
                </p>
              </div>
            )}
            <b>Posture Classification</b>
            <p>
              Using neural network algorithms, your posture is categorized into
              specific classifications (e.g., neutral, scoliotic, kyphotic).
              This classification helps identify patterns that may contribute to
              discomfort or movement inefficiencies.
            </p>
            <b>Recommended Exercises</b>
            <p>
              Based on your results, we’ve curated a set of exercises designed
              to address your unique posture needs:
            </p>
            <div>
              <p>
                🤸‍♀️ Ex 1
                <br />
                🤸‍♀️ Ex 2
                <br />
                🤸‍♀️ Ex 3
              </p>
            </div>
          </div>
          <button
            className={styles.next}
            onClick={() => changeFile(1)}
            disabled={isNextDisabled()}
            style={isNextDisabled() ? { color: DISABLED_COLOR } : {}}
          >
            &#10095;
          </button>
        </div>
      ) : (
        <div className={styles.spinnerContainer}>
          <img src={shrimpImage} className={styles.spinner} alt="spinner" />
        </div>
      )}
    </>
  );
};

export default Assessment;
